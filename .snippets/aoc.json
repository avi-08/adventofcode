{
	"aoc boilerplate": {
		"prefix": "aoc",
		"body": [
			"import argparse",
			"import os",
			"import logging",
			"",
			"",
			"def read_input(file_name='input.txt'):",
			"    file_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), file_name)",
			"    with open(file_path, 'r') as f:",
			"        lines = [x.strip() for x in f.readlines()]",
			"",
			"    return lines",
			"",
			"",
			"def main(args):",
			"    lines = read_input('sample.txt' if args.run_sample else 'input.txt')",
			"    ",
			"    # Part one",
			"    ",
			"    # Part two",
			"    pass",
			"",
			"",
			"if __name__ == '__main__':",
			"    parser = argparse.ArgumentParser()",
			"    parser.add_argument('-v', '--verbose', action='store_true')",
			"    parser.add_argument('-s', '--run-sample', action='store_true', help='Run with sample.txt; if omitted, runs with input.txt')",
			"    args = parser.parse_args()",
			"    logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG if args.verbose else logging.INFO)",
			"    main(args)",
			""
		],
		"description": "Produce boilerplate for aoc solutions"
	}
}